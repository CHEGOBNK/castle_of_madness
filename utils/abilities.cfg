#textdomain wesnoth-castle_of_madness

#define WEAPON_SPECIAL_FIRE_RITUAL TYPE
    # Это обычная чума, которую мы переименовали
    [plague]
        id=plague({TYPE})
        name= _ "fire ritual"
        description= _ "When a unit is killed by a Rutual attack, that unit is replaced with a unit on the same side as the unit with the Ritual attack. This doesn’t work on Undead or units in villages."
        type={TYPE}
    [/plague]
#enddef


#define ABILITY_MUDO_SUMMON ID OPTIONS
    [dummy]
        id=mudo_summon
        name= _ "summon"
        description=_"This unit can summon new units on adjacent tiles, but not in villages, or on water.

For more information, choose the 'Summoning Help' rightclick option which appears when rightclicking on a unit with the 'summon' ability."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=select,recruit,recall
    id=mudo_summon_select_event
    first_time_only=no
    [filter]
        ability=mudo_summon
        side=$side_number
    [/filter]

    [store_unit]
        [filter]
            x,y=$x1,$y1
        [/filter]
        variable=last_selected_unit
    [/store_unit]
[/event]

[event]
    name=start,post advance,unit placed,forcesummonoptions
    id=mudo_summon_init_event_{ID}
    first_time_only=no

    {OPTIONS}
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define SUMMON_MENU_ITEM ID DESCRIPTION COST SUMMONER UNIT
    [set_menu_item]
        id=summon_{ID}
        description={DESCRIPTION}+" - "+ _ "gold:"+" "+{COST}
        [show_if]
        [/show_if]

        [filter_location]
            [filter_adjacent_location]
                [filter]
                    type={SUMMONER}
                    side=$side_number
                    [filter_wml]
                        moves=$this_unit.max_moves
                    [/filter_wml]
                    [filter_location]
                        [not]
                            terrain=C*,K*
                        [/not]
                    [/filter_location]
                [/filter]
            [/filter_adjacent_location]
            [not]
                [filter]
                [/filter]
                [or]
                    terrain=_off^_usr,Q*,W*,*^X*,X*,*^V*
                [/or]
            [/not]
        [/filter_location]
        [command]
            [store_gold]
                variable=actualgold
                side=$side_number
            [/store_gold]
            {IF_VAR actualgold greater_than_equal_to {COST} (
                [then]
                    [gold]
                        amount=-{COST}
                        side=$side_number
                    [/gold]
                    [unit]
                        type={UNIT}
                        side=$side_number
                        x,y=$x1,$y1
                        moves=0
                        animate=yes
                    [/unit]
                    {MODIFY_UNIT x,y=$x1,$y1 attacks_left 0}
                    {MODIFY_UNIT x,y=$x1,$y1 moves 0}
                    [store_unit]
                        [filter]
                            type={SUMMONER}
                            side=$side_number
                            [filter_wml]
                                moves=$this_unit.max_moves
                            [/filter_wml]
                            [filter_adjacent]
                                x,y=$x1,$y1
                            [/filter_adjacent]
                        [/filter]
                        variable=able_to_summon
                    [/store_unit]
                    {IF_VAR able_to_summon.length greater_than 1 (
                        [then]
                            {FOREACH able_to_summon a}
                                {IF_VAR able_to_summon[$a].id equals $last_selected_unit.id (
                                    [then]
                                        {VARIABLE able_to_summon[$a].attacks_left 0}
                                        {VARIABLE able_to_summon[$a].moves 0}
                                        {VARIABLE_OP able_to_summon[$a].experience add 3}

                                        [unstore_unit]
                                            variable=able_to_summon[$a]
                                            find_vacant=no
                                            text= _ "+3 exp"
                                            red,green,blue=50,50,200
                                        [/unstore_unit]
                                        {CLEAR_VARIABLE able_to_summon}
                                    [/then]
                                    [else]
                                        [filter_condition]
                                            [variable]
                                                name=last_selected_unit.id
                                                equals=$empty
                                            [/variable]
                                            [or]
                                                [have_unit]
                                                    id=$last_selected_unit.id
                                                    [not]
                                                        [filter_adjacent]
                                                            x,y=$x1,$y1
                                                        [/filter_adjacent]
                                                    [/not]
                                                [/have_unit]
                                            [/or]
                                        [/filter_condition]

                                        [store_unit]
                                            [filter]
                                                id=able_to_summon[$a].id
                                            [/filter]
                                            variable=last_selected_unit
                                        [/store_unit]
                                        {VARIABLE able_to_summon[$a].attacks_left 0}
                                        {VARIABLE able_to_summon[$a].moves 0}
                                        {VARIABLE_OP able_to_summon[$a].experience add 3}

                                        [unstore_unit]
                                            variable=able_to_summon[$a]
                                            find_vacant=no
                                            text= _ "+3 exp"
                                            red,green,blue=50,50,200
                                        [/unstore_unit]
                                        {CLEAR_VARIABLE able_to_summon}
                                        {CLEAR_VARIABLE summoners}
                                    [/else]
                                )}
                            {NEXT a}
                        [/then]
                        [else]
                            [store_unit]
                                variable=able_to_summon
                                [filter]
                                    type={SUMMONER}
                                    side=$side_number
                                    [filter_wml]
                                        moves=$this_unit.max_moves
                                    [/filter_wml]
                                    [filter_adjacent]
                                        x,y=$x1,$y1
                                    [/filter_adjacent]
                                [/filter]
                            [/store_unit]
                            {VARIABLE able_to_summon.attacks_left 0}
                            {VARIABLE able_to_summon.moves 0}
                            {VARIABLE_OP able_to_summon.experience add 3}

                            [unstore_unit]
                                variable=able_to_summon
                                find_vacant=no
                                text= _ "+3 exp"
                                red,green,blue=50,50,200
                            [/unstore_unit]
                            {CLEAR_VARIABLE able_to_summon}
                            [fire_event]
                                name=post summon
                                [primary_unit]
                                    x,y=$x1,$y1
                                [/primary_unit]
                            [/fire_event]
                        [/else]
                    )}
                [/then]
                [else]
                    [message]
                        speaker=narrator
                        side_for=$side_number
                        caption=_ "Error"
                        message= _ "I have insufficient materials. I am unable to summon."
                        image=wesnoth-icon.png
                    [/message]
                [/else]
            )}
            {CLEAR_VARIABLE actualgold}
        [/command]
    [/set_menu_item]

    [set_menu_item]
        id=summon_zhelp
        description= _ "Summoning Help"
        image=items/book2.png~CROP(21,23,27,24)~SCALE(20,20)
        [show_if]
        [/show_if]

        [filter_location]
            [filter]
                ability=mudo_summon
                side=$side_number
            [/filter]
        [/filter_location]
        [command]
            [message]
                speaker=narrator
                side_for=$side_number
                caption=_ "Help"
                message= _ "To summon a unit right-click on hexes adjacent to a selected summoner.

You need all movement points (and remaining attacks) to summon one creature. You are unable to summon in villages, from castles or keeps. A new unit can’t be summoned on water.
Every summoning adds +3 to current experience.

If there are 2 or more summoners, a new unit will be summoned by the last selected unit able to summon, or if no summoner has been selected, a summoner next to the selected tile will be chosen randomly."
                image=wesnoth-icon.png
            [/message]
        [/command]
    [/set_menu_item]
#enddef


#define PLACE_DEPLOY_UNIT TYPE HP
        [unit]
            type={TYPE}
            side=$transport.side
            x,y=$transport.x,$transport.y
            experience=$transport.experience
            hitpoints=${HP}
            random_traits=yes
        [/unit]
#enddef

#define ABILITY_TRANSPORT_SWARM
    [dummy]
        id=transport_swarm
        name= _ "transport"
		description= _ "fish"
    [/dummy]
#enddef


#define TRANSPORT_EVENT
    [event]
#        name=last breath
        name=die
        first_time_only=no

                        [filter]
								ability=transport_swarm
                        [/filter]
                [store_unit]
                    [filter]
                      x,y=$x1,$y1
                    [/filter]
                    variable=transport
                    kill=yes
                [/store_unit]
#			{VARIABLE_OP hp1 rand (3,4,5,6,7,7,8,8,8,8,9,9,9,10,10,11,11,12,12)}
#			{VARIABLE_OP hp2 rand (3,4,5,6,7,7,8,8,8,8,9,9,9,10,10,11,11,12,12)}
#			{VARIABLE_OP hp3 rand (3,4,5,6,7,7,8,8,8,8,9,9,9,10,10,11,11,12,12)}
#			{VARIABLE_OP hp4 rand (3,4,5,6,7,7,8,8,8,8,9,9,9,10,10,11,11,12,12)}
			{VARIABLE_OP hp1 rand (6,7,7,7,8,8,8,8,9,9,9,10,10,10.11,11,12,12,13,14)}
			{VARIABLE_OP hp2 rand (6,7,7,7,8,8,8,8,9,9,9,10,10,10.11,11,12,12,13,14)}
			{VARIABLE_OP hp3 rand (6,7,7,7,8,8,8,8,9,9,9,10,10,10.11,11,12,12,13,14)}
			{VARIABLE_OP hp4 rand (6,7,7,7,8,8,8,8,9,9,9,10,10,10.11,11,12,12,13,14)}
	    [set_variable]
		name=transport.experience
		multiply=0.33
	    [/set_variable]
#ifndef MULTIPLAYER
        {PLACE_DEPLOY_UNIT "toadlings_smalltoadling" hp1}
        {PLACE_DEPLOY_UNIT "toadlings_smalltoadling" hp2}
        {PLACE_DEPLOY_UNIT "toadlings_smalltoadling" hp3}
        {PLACE_DEPLOY_UNIT "toadlings_smalltoadling" hp4}
#endif
#ifdef MULTIPLAYER
        {PLACE_DEPLOY_UNIT "toadlings_smalltoadling" hp1}
        {PLACE_DEPLOY_UNIT "toadlings_smalltoadling" hp2}
        {PLACE_DEPLOY_UNIT "toadlings_smalltoadling" hp3}
        {PLACE_DEPLOY_UNIT "toadlings_smalltoadling" hp4}
#endif
#the fourth one is there because we need one extra since the first one dissappears


                # drain moves ? attacks ? do whatever you want here.
#                {VARIABLE transport.moves 0}
#                {VARIABLE transport.attacks_left 0}

                # note that if more than one unit was adjacent the first stored is modified and all others just stay where they were
                {FOREACH transport i}
                    [unstore_unit]
                        variable=transport[$i]
                    [/unstore_unit]
                {NEXT i}

#                [redraw]
#                    clear_shroud=yes
#                [/redraw]
                {CLEAR_VARIABLE transport}
                {CLEAR_VARIABLE hp1}
                {CLEAR_VARIABLE hp2}
                {CLEAR_VARIABLE hp3}
                {CLEAR_VARIABLE hp4}
    [/event]
#enddef

#define ABILITY_LAZY
    # Units with trait Healthy get 1 more HP plus 1 per level and always rest heal.
    [abilities]
        id=alazy
        description= _ "Always rest heals"
        [effect]
            apply_to="alazy"
        [/effect]
        [effect]
            apply_to=hitpoints
            increase_total=1
        [/effect]
        [effect]
            apply_to=hitpoints
            times=per level
            increase_total=1
        [/effect]
    [/abilities]
#enddef