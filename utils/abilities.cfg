#define SPECIAL_FIREPLAGUE

#enddef

#define ABILITY_PATROL SIDE PATH ID
ai_special=guardian
[event]
	name=attack
	id=patrol_{ID}_attack
	[filter]
		id={ID}
	[/filter]
	[filter_second]
		side=1
	[/filter_second]
	[modify_unit]
		[filter]
			id={ID}
		[/filter]
		ai_special=no
		[status]
			guardian=no
		[/status]
	[/modify_unit]
	#[fire_event]
	#	id=abc
	#[fire_event]
	[remove_event]
		id=patrol_{ID}
	[/remove_event]
[/event]
[event]
	name = side {SIDE} turn end
	id=patrol_{ID}
	first_time_only = no
	#[message]
	#speaker=narrator
	#message= $side_number ${PATH}[$($turn_number|%${PATH}.length)].x#${PATH}[$($turn_number|%${PATH}.length)].x  ${PATH}[$($turn_number|%${PATH}.length)].y
	#[/message]
	[move_unit]
		id={ID}
		check_passability=yes
		to_x=${PATH}[$($turn_number|%${PATH}.length)].x
		to_y=${PATH}[$($turn_number|%${PATH}.length)].y
		clear_shroud=yes
		fire_event=yes
	[/move_unit]
[/event]
#enddef

#define ABILITY_HOTSTUFF
#1.15.0+ ONLY!
[resistance]
	id=hotdumpling
	name= _ "Bowl of 1000C pelmeni"
	description= _ "Pretty hot. Increases fire resistance of allied units by 15%"
	add=15
	max_value=100
	apply_to=fire
	[affect_adjacent]
		adjacent=n,ne,se,s,sw,nw
	[/affect_adjacent]
[/resistance] 
[leadership]
	affect_enemies=yes
	cumulative=yes
	value="(10 * (level - other.level))"
	name= _ "Hot Pal"
	description= _ "This unit is pretty hot. Increases fire damage of ALL adjacent units by 10% per level of difference."
	[affect_adjacent]
		adjacent=n,ne,se,s,sw,nw
	[/affect_adjacent]
	[filter_weapon]
			type=fire
	[/filter_weapon]
[/leadership]
#enddef

#define WEAPON_SPECIAL_STUN
#supress ZoC for 1 turn after attacking, put this weapon special into [specials]
[stunning]
name=_ "stunning"
id=stunning
description= _ "This unit will stun other unit on attack, disabling it's zone of control for 1 turn"
active_on=offense
[/stunning]
[/specials]
[/attack]
[event]
	name=attacker hits
	first_time_only=no
       	[filter_attack]
            	special=stunning
       	[/filter_attack]
	[floating_text]
		x,y=$x2,$y2
		text= "<span color='#dedede'>" + _ "Stunned!" + "</span>" 
	[/floating_text]
	{MODIFY_UNIT x,y=$x2,$y2 zoc false}
	[modify_unit]
		[filter]
			x,y=$x2,$y2
		[/filter]
		[effect]
			apply_to=status
			add=stunned
		[/effect]
	[/modify_unit]
[/event]
[event]
name=side turn
first_time_only=no
	{MODIFY_UNIT status=stunned zoc true}
		[modify_unit]
				[filter]
					status=stunned
				[/filter]
				[effect]
					apply_to=status
					remove=stunned
				[/effect]
		[/modify_unit]
[/event]
[+attack]
[+specials]
#enddef

#define LOAD_FROM ORIGIN_X ORIGIN_Y DIRECTION
#used in ABILITY_CARRIER
    [command]
        [store_locations]
            [filter_adjacent_location]
                x={ORIGIN_X}
                y={ORIGIN_Y}
                adjacent="-{DIRECTION}"
            [/filter_adjacent_location]
            variable=HEX_STORED
        [/store_locations]
        [if]
            [have_unit]
                x,y=$HEX_STORED.x,$HEX_STORED.y
                side=$side_number
                [and]
                    [not]
                        ability=carrier
                    [/not]
                    canrecruit=no
                [/and]
            [/have_unit]
            [then]
                [message]
                    speaker=narrator
                    message="$HEX_STORED.x $HEX_STORED.y"
                    image=wesnoth-icon.png
                [/message]
                [modify_unit]
                    [filter]
                        x,y=$HEX_STORED.x, $HEX_STORED.y
                    [/filter]
                    moves=0
                [/modify_unit]
                [modify_unit]
                    [filter]
                        x,y={ORIGIN_X},{ORIGIN_Y}
                    [/filter]
                    moves=0
                [/modify_unit]
                [store_unit]
                    [filter]
                        x,y=$HEX_STORED.x, $HEX_STORED.y
                    [/filter]
                    variable=UNIT_STORED_$unit.underlying_id|
                    kill=yes
                [/store_unit]
                {SET_VARIABLE IS_LOADED_$unit.underlying_id| 1}
            [/then]
            [else]
                [message]
                    speaker=narrator
                    message=_"No loadable unit here!"
                    image=wesnoth-icon.png
                [/message]
            [/else]
        [/if]
    [/command]
#enddef

#define UNLOAD_UNIT X Y
#used in ABILITY_CARRIER
    [command]
        [unstore_unit]
            variable=UNIT_STORED_$unit.underlying_id|
            x,y={X},{Y}
            find_vacant=yes
        [/unstore_unit]
        [modify_unit]
            [filter]
                x,y={X},{Y}
            [/filter]
            moves=0
        [/modify_unit]
        {CLEAR_VARIABLE UNIT_STORED_$unit.underlying_id|}
        {SET_VARIABLE IS_LOADED_$unit.underlying_id| 0}
    [/command]
#enddef

#define ABILITY_CARRIER
    [abilities]
        [carrier]
	   name=_"carrier"
           id=carrier
	   description=_"This unit can carry other units over the map. This ability is added to the menu when opening it with this unit selected."
        [/carrier]
    [/abilities]
    [event]
        name=unit placed, post advance
        [filter]
            type=$unit.type
        [/filter]
        first_time_only=no
        [set_variable]
            name=IS_LOADED_$unit.underlying_id|
            value=0
        [/set_variable]
    [/event]

    [event]
        name=unit placed, post advance
        first_time_only=yes
        [filter]
            type=$unit.type
        [/filter]
        [set_menu_item]
            id=airship_load
            description=_"Carrier: Load/Unload unit"
            [show_if]
                [have_unit]
                    x,y=$x1,$y1
                    type=$unit.type
                    side=$side_number
                    formula=$unit.moves
                [/have_unit]
            [/show_if]
            [command]
                [if]
                    [variable]
                        name=IS_LOADED_$unit.underlying_id
                        equals=0
                    [/variable]
                    [then]
                        [message]
                            message=_"Choose tile to load unit from. This will cost you all remaining moves."
                            speaker=unit
                            [option]
                                message=_"North-West ↖"
                                {LOAD_FROM $x1 $y1 nw}
                            [/option]
                            [option]
                                message=_"North ↑"
                                {LOAD_FROM $x1 $y1 n}
                            [/option]
                            [option]
                                message=_"North-East ↗"
                                {LOAD_FROM $x1 $y1 ne}
                            [/option]
                            [option]
                                message=_"South-East ↘"
                                {LOAD_FROM $x1 $y1 se}
                            [/option]
                            [option]
                                message=_"South ↓"
                                {LOAD_FROM $x1 $y1 s}
                            [/option]
                            [option]
                                message=_"South-West ↙"
                                {LOAD_FROM $x1 $y1 sw}
                            [/option]
                            [option]
                                message=_"Cancel"
                            [/option]
                        [/message]
                    [/then]
                    [else]
                        [message]
                            message=_"Unload unit now? If there are no available places, unit will take carrier's tile."
                            speaker=unit
                            [option]
                                message=_"Unload"
                                {UNLOAD_UNIT $x1 $y1}
                            [/option]
                            [option]
                                message=_"Cancel"
                            [/option]
                        [/message]
                    [/else]
                [/if]
            [/command]
        [/set_menu_item]
    [/event]
#enddef

#define SHOOT_AT X dX Y dY DAMAGE
#used in ABILITY_CATAPULT
    [command]
        [harm_unit]
            [filter]
                x,y="$({X}+{dX})","$({Y}+{dY})"
            [/filter]
            amount = {DAMAGE}
        [/harm_unit]
        [modify_unit]
            [filter]
                x,y={X},{Y}
            [/filter]
            moves=0
        [/modify_unit]
    [/command]
#enddef

#define ABILITY_CATAPULT DAMAGE
    [abilities]
        [catapult]
            name=_"catapult"
            id=catapult
            description=_"Can fire projectile to deal {DAMAGE} damage in a direction, skipping one hex. Can harm allies! This ability is added to the menu when opening it with this unit selected when it has maximum MP."
        [/catapult]
    [/abilities]
    [event]
        name=select
        [filter]
            type=$unit.type
        [/filter]
        [set_menu_item]
            id=catapult_fire
            description=_"Catapult: Fire!"
            [show_if]
                [have_unit]
                    x,y=$x1,$y1
                    type=$unit.type
                    [fiter_wml]
                        moves=$unit.max_moves
                    [/fiter_wml]
                [/have_unit]
            [/show_if]
            [command]
                [message]
                    message=_"Choose firing direction. This will cost you all remaining moves."
                    speaker=unit
                    [option]
                        message=_"North-West ↖"
                        {SHOOT_AT $x1 -2 $y1 -1 {DAMAGE}}
                    [/option]
                    [option]
                        message=_"North ↑"
                        {SHOOT_AT $x1 0 $y1 -2 {DAMAGE}}
                    [/option]
                    [option]
                        message=_"North-East ↗"
                        {SHOOT_AT $x1 2 $y1 -1 {DAMAGE}}
                    [/option]
                    [option]
                        message=_"East →"
                        {SHOOT_AT $x1 2 $y1 0 {DAMAGE}}
                    [/option]
                    [option]
                        message=_"South-East ↘"
                        {SHOOT_AT $x1 2 $y1 1 {DAMAGE}}
                    [/option]
                    [option]
                        message=_"South ↓"
                        {SHOOT_AT $x1 0 $y1 2 {DAMAGE}}
                    [/option]
                    [option]
                        message=_"South-West ↙"
                        {SHOOT_AT $x1 -2 $y1 1 {DAMAGE}}
                    [/option]
                    [option]
                        message=_"West ←"
                        {SHOOT_AT $x1 -2 $y1 0 {DAMAGE}}
                    [/option]
                    [option]
                        message=_"Cancel"
                    [/option]
                [/message]
            [/command]
        [/set_menu_item]
    [/event]
#enddef